name: validate uat deployment on pr
on:
  pull_request:
    types:
      - opened
      - synchronize
    paths:
      - force-app/**
    branches:
      - development
jobs:
  validate-uat-deployment-on-pr:
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: "14"
      - name: Checkout source code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install Salesforce CLI
        run: >
          wget
          https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz

          mkdir ~/sfdx

          tar xJf sfdx-linux-x64.tar.xz -C ~/sfdx --strip-components 1

          echo "$HOME/sfdx/bin" >> $GITHUB_PATH

          ~/sfdx/bin/sfdx version
      - name: Populate auth file with SFDX_URL secret of target org
        run: |
          echo ${{ secrets.UAT_SFDX_URL}} > ./UAT_SFDX_URL.txt
      - name: Authenticate to target Org
        run: sfdx auth:sfdxurl:store -f ./UAT_SFDX_URL.txt -s -a targetOrg
      - name: Installing sfdx git delta
        run: |
          echo y | sfdx plugins:install sfdx-git-delta
          sfdx plugins 
      - name: Create delta packages for new, modified or deleted metadata
        run: >
          mkdir changed-sources

          sfdx sgd:source:delta --to "HEAD" --from "HEAD^" --output changed-sources/ --generate-delta --source force-app/ 
      - name: Installing java
        run: sudo apt-get install openjdk-8-jdk
      - name: Installing SFDX scanner
        run: sfdx plugins:install @salesforce/sfdx-scanner
      - name: Scan code
        run: sfdx scanner:run --format sarif --target 'changed-sources/**/*.cls'
          --category 'Performance,Security' --outfile 'apexScanResults.sarif'
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: changed-sources/apexScanResults.sarif
      - name: Read PR Body
        env:
          PR_BODY: ${{github.event.pull_request.body}}
        run: |
          
          FILE=./parsePR.js 
          if test -f "$FILE"; then
              echo $PR_BODY > ./pr_body.txt
              node ./parsePR.js              
              TESTS=$(cat testsToRun.txt)
              echo "APEX_TESTS=$TESTS" >> $GITHUB_ENV     
          else
              TESTS=all
              echo "APEX_TESTS=$TESTS" >> $GITHUB_ENV 
          fi
      - name: Deployment - run specified tests
        if: ${{ env.APEX_TESTS != 'all' }}
        run: >
          echo ${{env.APEX_TESTS}}

          sfdx force:source:deploy -p "changed-sources/force-app" --checkonly --testlevel RunSpecifiedTests --runtests ${{env.APEX_TESTS}} --json
      - name: Deployment - run all tests
        if: ${{ env.APEX_TESTS == 'all' }}
        run: >
          echo ${{env.APEX_TESTS}}

          sfdx force:source:deploy -p "changed-sources/force-app" --checkonly --testlevel RunLocalTests --json
